{"ast":null,"code":"import _classCallCheck from\"/home/irina-sakhno/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/irina-sakhno/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this.baseUrl=options.baseUrl;this.apiToken=options.headers.authorization;this.contentType=options.headers.contentType;this._headers=options.headers;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getProfile\",value:function getProfile(){var _this=this;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:\"GET\",headers:{authorization:this.apiToken,\"Content-Type\":this.contentType}}).then(function(res){return _this._getResponseData(res);});}},{key:\"getInitialCards\",value:function getInitialCards(){var _this2=this;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:\"GET\",headers:this._headers}).then(function(res){return _this2._getResponseData(res);});}},{key:\"editProfile\",value:function editProfile(_ref){var _this3=this;var name=_ref.name,about=_ref.about;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:\"PATCH\",headers:{authorization:this.apiToken,\"Content-Type\":this.contentType},body:JSON.stringify({name:name,about:about})}).then(function(res){return _this3._getResponseData(res);});}},{key:\"addNewCard\",value:function addNewCard(_ref2){var _this4=this;var name=_ref2.name,link=_ref2.link;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:\"POST\",headers:{authorization:this.apiToken,\"Content-Type\":this.contentType},body:JSON.stringify({name:name,link:link})}).then(function(res){return _this4._getResponseData(res);});}},{key:\"deleteCard\",value:function deleteCard(cardId){var _this5=this;return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this.apiToken,\"Content-Type\":this.contentType}}).then(function(res){return _this5._getResponseData(res);});}},{key:\"changeAvatar\",value:function changeAvatar(avatar){var _this6=this;return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:\"PATCH\",headers:{authorization:this.apiToken,\"Content-Type\":this.contentType},body:JSON.stringify({avatar:avatar})}).then(function(res){return _this6._getResponseData(res);});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,likeStatus){var _this7=this;return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:\"\".concat(likeStatus?\"DELETE\":\"PUT\"),headers:this._headers}).then(function(res){return _this7._getResponseData(res);});}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-62\",headers:{authorization:\"e039fbc5-c9a5-4fc5-afa9-2046730c027f\",contentType:\"application/json\"}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","baseUrl","apiToken","headers","authorization","contentType","_headers","_createClass","key","value","_getResponseData","res","ok","json","Promise","reject","concat","status","getProfile","_this","fetch","method","then","getInitialCards","_this2","editProfile","_ref","_this3","name","about","body","JSON","stringify","addNewCard","_ref2","_this4","link","deleteCard","cardId","_this5","changeAvatar","avatar","_this6","changeLikeCardStatus","likeStatus","_this7","api"],"sources":["/home/irina-sakhno/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.apiToken = options.headers.authorization;\n    this.contentType = options.headers.contentType;\n    this._headers = options.headers;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfile() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        authorization: this.apiToken,\n        \"Content-Type\": this.contentType,\n      },\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n\n  editProfile({ name, about }) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this.apiToken,\n        \"Content-Type\": this.contentType,\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n\n  addNewCard({ name, link }) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this.apiToken,\n        \"Content-Type\": this.contentType,\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this.apiToken,\n        \"Content-Type\": this.contentType,\n      },\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n\n  changeAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this.apiToken,\n        \"Content-Type\": this.contentType,\n      },\n      body: JSON.stringify({\n        avatar: avatar,\n      }),\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n\n  changeLikeCardStatus(cardId, likeStatus) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      method: `${likeStatus ? \"DELETE\" : \"PUT\"}`,\n      headers: this._headers,\n    }).then((res) => {\n      return this._getResponseData(res);\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-62\",\n  headers: {\n    authorization: \"e039fbc5-c9a5-4fc5-afa9-2046730c027f\",\n    contentType: \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}